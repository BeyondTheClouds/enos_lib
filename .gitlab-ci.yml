---
stages:
 - test
 - functionnal
 - package
 - publish


###############################################################################
#
#                             TEST STAGE
#
###############################################################################

python3.6:
  image: python:3.6
  stage: test
  tags: [qlf-ci.inria.fr]
  script:
  - pip install tox
  - tox -e py36

python3.7:
  image: python:3.7
  stage: test
  tags: [qlf-ci.inria.fr]
  script:
  - pip install tox
  - tox -e py37
  coverage: /^TOTAL\s+\d+\s+\d+\s+(\d+\%)$/

python3.8:
  image: python:3.8
  stage: test
  tags: [qlf-ci.inria.fr]
  script:
  - pip install tox
  - tox -e py38

pep8:
  image: python:3.7
  stage: test
  tags: [qlf-ci.inria.fr]
  script:
  - pip install tox
  - tox -e pep8

typecheck:
  image: python:3.6
  stage: test
  allow_failure: true
  tags: [qlf-ci.inria.fr]
  script:
  - pip install tox
  - tox -e typecheck

python3.6_sonar:
  image: python:3.7-stretch
  stage: test
  allow_failure: true
  tags:
  - large
  - qlf-ci.inria.fr
  only:
    refs:
    - master
  script:
  - pip install -e .
  - apt update
  - apt install -y wget unzip openjdk-8-jre
  - pip install pylint
  - wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.2.0.1227-linux.zip
  - unzip sonar-scanner-cli-3.2.0.1227-linux.zip
  - wget --no-check-certificate https://sonarqube.inria.fr/static/digicertca.crt
  - keytool -import -alias inria -storepass "changeit" -keystore $(pwd)/sonar-scanner-3.2.0.1227-linux/jre/lib/security/cacerts -file digicertca.crt
  - sonar-scanner-3.2.0.1227-linux/bin/sonar-scanner -X -Dsonar.login=$SONAR_LOGIN
  artifacts:
    paths:
    - ./utest.xml
    - ./coverage.xml

doc:
  image: python:3.7
  stage: test
  tags: [qlf-ci.inria.fr]
  script:
  - pip install tox
  - tox -e docs
  artifacts:
    paths:
    - docs/_build/html


###############################################################################
#
#                             FUNCTIONNAL STAGE
#
###############################################################################


## Debian 10
#-----------------------------------------------
test_static_run_command$debian10$: &debian10
  image: debian:10
  stage: functionnal
  tags: [qlf-ci.inria.fr]
  script:
  - env
  - apt update
  - apt install -y python3 python3-pip iproute2
  - ip a
  - update-alternatives --install /usr/bin/python python /usr/bin/python3 1
  - pip3 install -e .
  - cd enoslib/tests/functionnal
  - python3 ${CI_JOB_NAME//$*$/}.py

test_static_gather_facts$debian10$:
  <<: *debian10

test_static_play_on$debian10$:
  <<: *debian10

test_static_run_ansible$debian10$:
  <<: *debian10

test_monitoring_service$debian10$:
  <<: *debian10

test_static_tasks$debian10$:
  <<: *debian10

test_dask$debian10$:
  <<: *debian10

test_discover_networks$debian10$:
  <<: *debian10

test_dstat$debian10$:
  <<: *debian10

## debian latest
#-----------------------------------------------
test_static_run_command$debian$: &debian
  <<: *debian10
  image: debian:latest

test_static_gather_facts$debian$:
  <<: *debian

test_static_play_on$debian$:
  <<: *debian

test_static_run_ansible$debian$:
  <<: *debian

test_monitoring_service$debian$:
  <<: *debian

test_static_tasks$debian$:
  <<: *debian

test_dask$debian$:
  <<: *debian

test_discover_networks$debian$:
  <<: *debian

test_dstat$debian$:
  <<: *debian
## ubuntu 1804
#-----------------------------------------------
test_static_run_command$ubuntu1804$: &ubuntu1804
  <<: *debian10
  image: ubuntu:18.04

test_static_gather_facts$ubuntu1804$:
  <<: *ubuntu1804

test_static_play_on$ubuntu1804$:
  <<: *ubuntu1804

test_static_run_ansible$ubuntu1804$:
  <<: *ubuntu1804

test_monitoring_service$ubuntu1804$:
  <<: *ubuntu1804

test_static_tasks$ubuntu1804$:
  <<: *ubuntu1804

test_dask$ubuntu1804$:
  <<: *ubuntu1804

test_discover_networks$debian$:
  <<: *ubuntu1804

test_dstat$debian$:
  <<: *ubuntu1804

## ubuntu latest
#-----------------------------------------------
test_static_run_command$ubuntu$: &ubuntu
  <<: *debian10
  image: ubuntu:latest

test_static_gather_facts$ubuntu$:
  <<: *ubuntu

test_static_play_on$ubuntu$:
  <<: *ubuntu

test_static_run_ansible$ubuntu$:
  <<: *ubuntu

test_monitoring_service$ubuntu$:
  <<: *ubuntu

test_static_tasks$ubuntu$:
  <<: *ubuntu

test_dask$ubuntu$:
  <<: *ubuntu

test_discover_networks$ubuntu$:
  <<: *ubuntu

test_dstat$ubuntu$:
  <<: *ubuntu

###############################################################################
#
#                             PACKAGE STAGE
#
###############################################################################

#### Entering the release zone
package:
  image: python:3.7
  stage: package
  tags: [qlf-ci.inria.fr]
  only:
  - tags
  script:
  - python setup.py bdist_wheel
  artifacts:
    paths:
    - dist/


###############################################################################
#
#                             PUBLISH STAGE
#
###############################################################################

pages:
  # when: manual
  stage: publish
  tags: [qlf-ci.inria.fr]
  only:
  - tags
  dependencies:
  - doc
  script:
  - mkdir -p public/
  - cp -r docs/_build/html/* public/
  artifacts:
    paths:
    - public

pypi:
  image: python:3.7
  stage: publish
  tags: [qlf-ci.inria.fr]
  only:
  - tags
  dependencies:
  - package
  script:
  - pip install twine
   # credentials are set in the env by gitlab
  - twine upload dist/* --verbose
